# 刪去多餘欄位
drops <- c("Country.Code")
df <- df[ , !(names(df) %in% drops)]
head(df)
# df %>% summary()
## 以印度為分析目標
india <- df %>% filter(Country=='India')
india$Price.range <- as.factor(india$Price.range)
#將底下的圖設定為黑白配色（theme_bw）
old <- theme_set(theme_bw())
### 首先從不同Price.range的Average.Cost.for.two盒鬚圖開始，並計算其信賴區間
ggplot(data = india, aes(x = Price.range, y = Average.Cost.for.two)) +
geom_boxplot() +
coord_flip() +
labs( y = 'Average cost for two', x = 'Price range',
title = 'Average cost for two Box')
# 以下函式計算95%信賴區間
with(india,
tapply(Average.Cost.for.two, Price.range,
function(x)
c(mean(x) + c(-2, 2) * sd(x)/sqrt(length(x)))))
### 以下用 t-test 檢驗不同性別是否存在數學成績差異
#此函數會預設進行 Welch 校正，以處理兩樣本變異數不相同的問題
t.test(Average.Cost.for.two ~ Price.range, data = india)
anova(Average.Cost.for.two ~ Price.range, data = india)
anova(lm(Average.Cost.for.two ~ Price.range, data = india))
### 首先從不同Price.range的Average.Cost.for.two盒鬚圖開始，並計算其信賴區間
ggplot(data = india, aes(x = Price.range, y = Average.Cost.for.two)) +
geom_boxplot() +
coord_flip() +
labs( y = 'Average cost for two', x = 'Price range',
title = 'Average cost for two Box')
# 以下函式計算95%信賴區間
with(india,
tapply(Average.Cost.for.two, Price.range,
function(x)
c(mean(x) + c(-2, 2) * sd(x)/sqrt(length(x)))))
anova(lm(Average.Cost.for.two ~ Price.range, data = india))
# 照順序排放
india$Rating.text <- factor(india$Rating.text,
levels = c('Not rated',
'Poor',
'Average',
'Good',
'Very Good',
'Excellent'))
#看不同的Rating.text下的Rating分數平均數
tapply(india$Aggregate.rating, india$Rating.text, mean)
ggplot(data = india, aes(x = Rating.text, y = Aggregate.rating)) +
geom_boxplot() +
coord_flip() +
labs( y = 'Aggregate rating', x = 'Rating text',
title = 'Aggregate rating Box')
#以下函式計算95%信賴區間
with(india,
tapply(Aggregate.rating, Rating.text,
function(x)
c(mean(x) + c(-2, 2) * sd(x)/sqrt(length(x)))))
#同父母教育程度下的數學分數平均數，加上信賴區間
#看不同的Rating.text下的Rating分數平均數
ggplot(data = india,
aes(x = Rating.text, y = Aggregate.rating)) +
stat_summary(fun.data = 'mean_cl_boot', size = 1)+
scale_y_continuous(breaks = seq(1, 5, by = 0.5)) +
geom_hline(yintercept = mean(india$Aggregate.rating) ,
linetype = 'dotted') +
labs(x = 'Rating text', y = 'Aggregate rating') +
coord_flip()
ggplot(data = india, aes(x = Rating.text, y = Aggregate.rating)) +
geom_boxplot() +
coord_flip() +
labs( y = 'Aggregate rating', x = 'Rating text',
title = 'Aggregate rating Box')
anova(m1 <- lm(Aggregate.rating ~ Rating.text, data = india))
### 首先從不同Price.range的Average.Cost.for.two盒鬚圖開始，並計算其信賴區間
ggplot(data = india, aes(x = Has.Table.booking, y = Average.Cost.for.two)) +
geom_boxplot() +
coord_flip() +
labs( y = 'Average cost for two', x = 'Price range',
title = 'Average cost for two Box')
# 以下函式計算95%信賴區間
with(india,
tapply(Average.Cost.for.two, Has.Table.booking,
function(x)
c(mean(x) + c(-2, 2) * sd(x)/sqrt(length(x)))))
t.test(Average.Cost.for.two ~ Has.Table.booking, data = india)
### 首先從不同Price.range的Average.Cost.for.two盒鬚圖開始，並計算其信賴區間
ggplot(data = india, aes(x = Has.Table.booking, y = Average.Cost.for.two)) +
geom_boxplot() +
coord_flip() +
labs( y = 'Average cost for two', x = 'Has Table booking',
title = 'Average cost for two Box')
# 以下函式計算95%信賴區間
with(india,
tapply(Average.Cost.for.two, Has.Table.booking,
function(x)
c(mean(x) + c(-2, 2) * sd(x)/sqrt(length(x)))))
t.test(Average.Cost.for.two ~ Has.Table.booking, data = india)
View(df)
unique(df$Currency)
### 首先從不同Price.range的Average.Cost.for.two盒鬚圖開始，並計算其信賴區間
ggplot(data = india, aes(x = Has.Online.delivery, y = Average.Cost.for.two)) +
geom_boxplot() +
coord_flip() +
labs( y = 'Average cost for two', x = 'Has Online delivery',
title = 'Average cost for two Box')
# 以下函式計算95%信賴區間
with(india,
tapply(Average.Cost.for.two, Has.Online.delivery,
function(x)
c(mean(x) + c(-2, 2) * sd(x)/sqrt(length(x)))))
t.test(Average.Cost.for.two ~ Has.Online.delivery, data = india)
### 首先從不同Price.range的Average.Cost.for.two盒鬚圖開始，並計算其信賴區間
ggplot(data = india, aes(x = Has.Online.delivery, y = Switch.to.order.menu)) +
geom_boxplot() +
coord_flip() +
labs( y = 'Average cost for two', x = 'Switch.to.order.menu',
title = 'Average cost for two Box')
# 以下函式計算95%信賴區間
with(india,
tapply(Average.Cost.for.two, Switch.to.order.menu,
function(x)
c(mean(x) + c(-2, 2) * sd(x)/sqrt(length(x)))))
t.test(Average.Cost.for.two ~ Switch.to.order.menu, data = india)
### 首先從不同Price.range的Average.Cost.for.two盒鬚圖開始，並計算其信賴區間
ggplot(data = india, aes(x = Rating.text, y = Average.Cost.for.two)) +
geom_boxplot() +
coord_flip() +
labs( y = 'Average cost for two', x = 'Rating.text',
title = 'Average cost for two Box')
# 以下函式計算95%信賴區間
with(india,
tapply(Average.Cost.for.two, Rating.text,
function(x)
c(mean(x) + c(-2, 2) * sd(x)/sqrt(length(x)))))
anova(lm(Average.Cost.for.two ~ Rating.text, data = india))
ggplot(data = india,
aes(group = Rating.text,
y = Average.Cost.for.two, x = Votes)) +
geom_point() +
stat_smooth(method = 'lm', se = F) +
stat_smooth(aes(group = Rating.text,
y = Average.Cost.for.two, x = Votes),
method = 'lm', se = F) +
facet_grid( . ~  Rating.text) +
labs(x = 'Votes', y = 'Average.Cost.for.two')
anova(lm(Aggregate.rating ~ Rating.text, data = india))
anova(m1 <- lm(Average.Cost.for.two ~ Rating.text, data = india))
anova(m1 <- lm(Average.Cost.for.two ~ Rating.text, data = india))
#把Votes加進模型
anova(m2 <- update(m1, . ~ . + Votes, data = india))
#或許不是Rating.text而是Votes造成
anova(m3 <- update(m2, . ~ . - Rating.text, data = india))
knitr::opts_chunk$set(echo = TRUE)
#將結果放在一個list中
res_lm <- lapply(list(m1, m2, m3), summary)
#比較在控制教育資源下，父母教育的效果
(res_lm[[2]]$r.sq - res_lm[[3]]$r.sq)/res_lm[[2]]$r.sq
anova(m3, m2)
#比較在控制父母教育下，教育資源的效果
(res_lm[[2]]$r.sq - res_lm[[1]]$r.sq)/res_lm[[1]]$r.sq
anova(m1, m2)
#將結果放在一個list中
res_lm <- lapply(list(m1, m2, m3), summary)
res_lm
res_lm[[2]]$r.squared
anova(m1, m2)
require(coefplot)
# m2 <- lm(math ~ parental.education+educational.resources- 1,
#          data = dta)
coefplot(m2, xlab = '估計值', ylab = '迴歸變項', title = '反應變項 = 數學分數')
install.packages('coefplot')
require(coefplot)
# m2 <- lm(math ~ parental.education+educational.resources- 1,
#          data = dta)
coefplot(m2, xlab = '估計值', ylab = '迴歸變項', title = '反應變項 = 數學分數')
require(coefplot)
# m2 <- lm(math ~ parental.education+educational.resources- 1,
#          data = dta)
coefplot(m2, xlab = '估計值', ylab = '迴歸變項', title = '反應變項 = 數學分數')
require(coefplot)
# m2 <- lm(math ~ parental.education+educational.resources- 1,
#          data = dta)
coefplot(m2, xlab = '估計值', ylab = '迴歸變項', title = '反應變項 = 數學分數')
require(coefplot)
# m2 <- lm(math ~ parental.education+educational.resources- 1,
#          data = dta)
coefplot(m2, xlab = '估計值', ylab = '迴歸變項', title = '反應變項 = 數學分數')
import(coefplot)
library(coefplot)
install.packages("coefplot")
install.packages("coefplot", binary)
install.packages("coefplot", source =binary)
install.packages("coefplot", source ='binary')
require(coefplot)
install.packages("coefplot")
install.packages("coefplot")
require(coefplot)
# m2 <- lm(math ~ parental.education+educational.resources- 1,
#          data = dta)
coefplot(m2, xlab = '估計值', ylab = '迴歸變項', title = '反應變項 = 數學分數')
require(coefplot)
# m2 <- lm(math ~ parental.education+educational.resources- 1,
#          data = dta)
coefplot(m1, xlab = '估計值', ylab = '迴歸變項', title = '反應變項 = Average.Cost.for.two')
require(coefplot)
# m2 <- lm(math ~ parental.education+educational.resources- 1,
#          data = dta)
coefplot(m3, xlab = '估計值', ylab = '迴歸變項', title = '反應變項 = Average.Cost.for.two')
require(coefplot)
# m2 <- lm(math ~ parental.education+educational.resources- 1,
#          data = dta)
coefplot(m2, xlab = '估計值', ylab = '迴歸變項', title = '反應變項 = Average.Cost.for.two')
fit_m2 <- data.frame(india[, c(10, 19, 20)], fitted = fitted(m2), resid = resid(m2),
infl = influence(m2)$hat )
fit_m2
ggplot(data = fit_m2, aes(x = Average.Cost.for.two, group = Rating.text )) +
stat_density(geom = 'path', position = 'identity') +
stat_density(geom = 'path', position = 'identity', aes(x = fitted)) +
geom_vline(xintercept = c(with(india, tapply(Average.Cost.for.two,Rating.text, mean))), linetype = 'dotted')+
facet_grid(Rating.text ~ .) +
scale_x_continuous(breaks = seq(200, 900, by = 100))+
labs(x = 'Average.Cost.for.two', y = '機率密度')
ggplot(data = fit_m2, aes(x = Average.Cost.for.two, group = Rating.text )) +
stat_density(geom = 'path', position = 'identity') +
stat_density(geom = 'path', position = 'identity', aes(x = fitted)) +
geom_vline(xintercept = c(with(india, tapply(Average.Cost.for.two,Rating.text, mean))), linetype = 'dotted')+
facet_grid(Rating.text ~ .) +
scale_x_continuous(breaks = seq(200, 900))+
labs(x = 'Average.Cost.for.two', y = '機率密度')
ggplot(data = fit_m2, aes(x = Average.Cost.for.two, group = Rating.text )) +
stat_density(geom = 'path', position = 'identity') +
stat_density(geom = 'path', position = 'identity', aes(x = fitted)) +
geom_vline(xintercept = c(with(india, tapply(Average.Cost.for.two,Rating.text, mean))), linetype = 'dotted')+
facet_grid(Rating.text ~ .) +
scale_x_continuous(breaks = seq(200, 3000, by = 100))+
labs(x = 'Average.Cost.for.two', y = '機率密度')
ggplot(data = fit_m2, aes(x = Average.Cost.for.two, group = Rating.text )) +
stat_density(geom = 'path', position = 'identity') +
stat_density(geom = 'path', position = 'identity', aes(x = fitted)) +
geom_vline(xintercept = c(with(india, tapply(Average.Cost.for.two,Rating.text, mean))), linetype = 'dotted')+
facet_grid(Rating.text ~ .) +
scale_x_continuous(breaks = seq(200, 400, by = 100))+
labs(x = 'Average.Cost.for.two', y = '機率密度')
ggplot(data = fit_m2, aes(x = Average.Cost.for.two, group = Rating.text )) +
stat_density(geom = 'path', position = 'identity') +
stat_density(geom = 'path', position = 'identity', aes(x = fitted)) +
geom_vline(xintercept = c(with(india, tapply(Average.Cost.for.two,Rating.text, mean))), linetype = 'dotted')+
facet_grid(Rating.text ~ .) +
scale_x_continuous(breaks = seq(200, 3000, by = 100))+
labs(x = 'Average.Cost.for.two', y = '機率密度')
ggplot(data = fit_m2, aes(x = Average.Cost.for.two, group = Rating.text )) +
stat_density(geom = 'path', position = 'identity') +
stat_density(geom = 'path', position = 'identity', aes(x = fitted)) +
geom_vline(xintercept = c(with(india, tapply(Average.Cost.for.two,Rating.text, mean))), linetype = 'dotted')+
facet_grid(Rating.text ~ .) +
scale_x_continuous(breaks = seq(0, 3000, by = 100))+
labs(x = 'Average.Cost.for.two', y = '機率密度')
require(coefplot)
# m2 <- lm(Average.Cost.for.two ~ Rating.text + Votes - 1,
#          data = india)
coefplot(m2, xlab = '估計值', ylab = '迴歸變項', title = '反應變項 = Average.Cost.for.two')
fit_m2 <- data.frame(india[, c(10, 19, 20)], fitted = fitted(m2), resid = resid(m2),
infl = influence(m2)$hat )
ggplot(data = fit_m2, aes(x = Average.Cost.for.two, group = Rating.text )) +
stat_density(geom = 'path', position = 'identity') +
stat_density(geom = 'path', position = 'identity', aes(x = fitted)) +
geom_vline(xintercept = c(with(india, tapply(Average.Cost.for.two,Rating.text, mean))), linetype = 'dotted')+
facet_grid(Rating.text ~ .) +
scale_x_continuous(breaks = seq(0, 3000, by = 100))+
labs(x = 'Average.Cost.for.two', y = '機率密度')
ggplot(data = fit_m2, aes(x = Average.Cost.for.two, group = Rating.text )) +
stat_density(geom = 'path', position = 'identity') +
stat_density(geom = 'path', position = 'identity', aes(x = fitted)) +
scale_x_continuous(breaks = seq(0, 3000, by = 100))+
labs(x = 'Average.Cost.for.two', y = '機率密度')
ggplot(data = fit_m2, aes(x = Average.Cost.for.two, group = Rating.text )) +
stat_density(geom = 'path', position = 'identity') +
stat_density(geom = 'path', position = 'identity', aes(x = fitted)) +
scale_x_continuous(breaks = seq(0, 3000, by = 500))+
labs(x = 'Average.Cost.for.two', y = '機率密度')
ggplot(data = fit_m2, aes(x = Average.Cost.for.two, group = Rating.text )) +
stat_density(geom = 'path', position = 'identity') +
stat_density(geom = 'path', position = 'identity', aes(x = fitted)) +
geom_vline(xintercept = c(with(india, tapply(Average.Cost.for.two,Rating.text, mean))), linetype = 'dotted')+
facet_grid(Rating.text ~ .) +
scale_x_continuous(breaks = seq(0, 3000, by = 500))+
labs(x = 'Average.Cost.for.two', y = '機率密度')
ggplot(data = fit_m2, aes(x = Average.Cost.for.two, group = Rating.text )) +
stat_density(geom = 'path', position = 'identity') +
stat_density(geom = 'path', position = 'identity', aes(x = fitted)) +
geom_vline(xintercept = c(with(india, tapply(Average.Cost.for.two,Rating.text, mean))), linetype = 'dotted')+
facet_grid(Rating.text ~ .) +
scale_x_continuous(breaks = seq(0, 8000, by = 500))+
labs(x = 'Average.Cost.for.two', y = '機率密度')
require(coefplot)
m2 <- lm(Average.Cost.for.two ~ Rating.text + Votes - 1,
data = india)
coefplot(m2, xlab = '估計值', ylab = '迴歸變項', title = '反應變項 = Average.Cost.for.two')
fit_m2 <- data.frame(india[, c(10, 19, 20)], fitted = fitted(m2), resid = resid(m2),
infl = influence(m2)$hat )
ggplot(data = fit_m2, aes(x = Average.Cost.for.two, group = Rating.text )) +
stat_density(geom = 'path', position = 'identity') +
stat_density(geom = 'path', position = 'identity', aes(x = fitted)) +
geom_vline(xintercept = c(with(india,tapply(Average.Cost.for.two,Rating.text,mean))),  linetype = 'dotted') +
facet_grid(Rating.text ~ .) +
scale_x_continuous(breaks = seq(0, 8000, by = 500)) +
labs(x = 'Average.Cost.for.two', y = '機率密度')
fit_m3 <- data.frame(india[, c(10, 20)], fitted = fitted(m3), resid = resid(m3),
infl = influence(m3)$hat )
ggplot(data = fit_m3, aes(x = Average.Cost.for.two)) +
stat_density(geom = 'path', position = 'identity') +
stat_density(geom = 'path', position = 'identity', aes(x = fitted)) +
geom_vline(xintercept = c(with(india,tapply(Average.Cost.for.two,Rating.text,mean))),  linetype = 'dotted')  +
scale_x_continuous(breaks = seq(0, 8000, by = 500)) +
labs(x = 'Average.Cost.for.two', y = '機率密度')
m4 <- lm(Average.Cost.for.two ~ Rating.text + Votes + Has.Online.delivery + Has.Table.booking,
data = india)
fit_m4 <- data.frame(india[, c(10, 19, 20, 13, 12)], fitted = fitted(m4), resid = resid(m4),
infl = influence(m4)$hat )
ggplot(data = fit_m4, aes(x = Average.Cost.for.two)) +
stat_density(geom = 'path', position = 'identity') +
stat_density(geom = 'path', position = 'identity', aes(x = fitted)) +
geom_vline(xintercept = c(with(india,tapply(Average.Cost.for.two,Rating.text,mean))),  linetype = 'dotted')  +
scale_x_continuous(breaks = seq(0, 8000, by = 500)) +
labs(x = 'Average.Cost.for.two', y = '機率密度')
m4 <- lm(Average.Cost.for.two ~ Rating.text + Has.Online.delivery + Has.Table.booking, data = india)
fit_m4 <- data.frame(india[, c(10, 19, 13, 12)], fitted = fitted(m4), resid = resid(m4), infl = influence(m4)$hat )
ggplot(data = fit_m4, aes(x = Average.Cost.for.two)) +
stat_density(geom = 'path', position = 'identity') +
stat_density(geom = 'path', position = 'identity', aes(x = fitted)) +
geom_vline(xintercept = c(with(india,tapply(Average.Cost.for.two,Rating.text,mean))),  linetype = 'dotted')  +
scale_x_continuous(breaks = seq(0, 8000, by = 500)) +
labs(x = 'Average.Cost.for.two', y = '機率密度')
m4 <- lm(Average.Cost.for.two ~ Rating.text + Votes + Has.Online.delivery + Has.Table.booking, data = india)
fit_m4 <- data.frame(india[, c(10, 19, 20, 13, 12)], fitted = fitted(m4), resid = resid(m4), infl = influence(m4)$hat )
ggplot(data = fit_m4, aes(x = Average.Cost.for.two)) +
stat_density(geom = 'path', position = 'identity') +
stat_density(geom = 'path', position = 'identity', aes(x = fitted)) +
geom_vline(xintercept = c(with(india,tapply(Average.Cost.for.two,Rating.text,mean))),  linetype = 'dotted')  +
scale_x_continuous(breaks = seq(0, 8000, by = 500)) +
labs(x = 'Average.Cost.for.two', y = '機率密度')
m4 <- lm(Average.Cost.for.two ~ Rating.text + Votes + Has.Online.delivery + Has.Table.booking + Aggregate.rating, data = india)
fit_m4 <- data.frame(india[, c(10, 19, 20, 13, 12, 17)], fitted = fitted(m4), resid = resid(m4), infl = influence(m4)$hat )
ggplot(data = fit_m4, aes(x = Average.Cost.for.two)) +
stat_density(geom = 'path', position = 'identity') +
stat_density(geom = 'path', position = 'identity', aes(x = fitted))  +
scale_x_continuous(breaks = seq(0, 8000, by = 500)) +
labs(x = 'Average.Cost.for.two', y = '機率密度')
m4 <- lm(Average.Cost.for.two ~ Rating.text + Votes + Has.Online.delivery + Has.Table.booking + Aggregate.rating + Price.range, data = india)
fit_m4 <- data.frame(india[, c(10, 19, 20, 13, 12, 17, 16)], fitted = fitted(m4), resid = resid(m4), infl = influence(m4)$hat )
ggplot(data = fit_m4, aes(x = Average.Cost.for.two)) +
stat_density(geom = 'path', position = 'identity') +
stat_density(geom = 'path', position = 'identity', aes(x = fitted))  +
scale_x_continuous(breaks = seq(0, 8000, by = 500)) +
labs(x = 'Average.Cost.for.two', y = '機率密度')
m4 <- lm(Average.Cost.for.two ~ Rating.text + Votes + Has.Online.delivery + Has.Table.booking + Aggregate.rating, data = india)
fit_m4 <- data.frame(india[, c(10, 19, 20, 13, 12, 17)], fitted = fitted(m4), resid = resid(m4), infl = influence(m4)$hat )
ggplot(data = fit_m4, aes(x = Average.Cost.for.two)) +
stat_density(geom = 'path', position = 'identity') +
stat_density(geom = 'path', position = 'identity', aes(x = fitted))  +
scale_x_continuous(breaks = seq(0, 8000, by = 500)) +
labs(x = 'Average.Cost.for.two', y = '機率密度')
m4 <- lm(Average.Cost.for.two ~ Rating.text + Votes + Has.Online.delivery + Has.Table.booking + Aggregate.rating + Price.range, data = india)
fit_m4 <- data.frame(india[, c(10, 19, 20, 13, 12, 17, 16)], fitted = fitted(m4), resid = resid(m4), infl = influence(m4)$hat )
ggplot(data = fit_m4, aes(x = Average.Cost.for.two)) +
stat_density(geom = 'path', position = 'identity') +
stat_density(geom = 'path', position = 'identity', aes(x = fitted))  +
scale_x_continuous(breaks = seq(0, 8000, by = 500)) +
labs(x = 'Average.Cost.for.two', y = '機率密度')
m4 <- lm(Average.Cost.for.two ~  Votes + Has.Online.delivery + Has.Table.booking + Aggregate.rating + Price.range, data = india)
fit_m4 <- data.frame(india[, c(10,  20, 13, 12, 17, 16)], fitted = fitted(m4), resid = resid(m4), infl = influence(m4)$hat )
ggplot(data = fit_m4, aes(x = Average.Cost.for.two)) +
stat_density(geom = 'path', position = 'identity') +
stat_density(geom = 'path', position = 'identity', aes(x = fitted))  +
scale_x_continuous(breaks = seq(0, 8000, by = 500)) +
labs(x = 'Average.Cost.for.two', y = '機率密度')
m4 <- lm(Average.Cost.for.two ~   Has.Online.delivery + Has.Table.booking + Aggregate.rating + Price.range, data = india)
fit_m4 <- data.frame(india[, c(10, 13, 12, 17, 16)], fitted = fitted(m4), resid = resid(m4), infl = influence(m4)$hat )
ggplot(data = fit_m4, aes(x = Average.Cost.for.two)) +
stat_density(geom = 'path', position = 'identity') +
stat_density(geom = 'path', position = 'identity', aes(x = fitted))  +
scale_x_continuous(breaks = seq(0, 8000, by = 500)) +
labs(x = 'Average.Cost.for.two', y = '機率密度')
m4 <- lm(Average.Cost.for.two ~   Has.Online.delivery + Has.Table.booking + Price.range, data = india)
fit_m4 <- data.frame(india[, c(10, 13, 12, 16)], fitted = fitted(m4), resid = resid(m4), infl = influence(m4)$hat )
ggplot(data = fit_m4, aes(x = Average.Cost.for.two)) +
stat_density(geom = 'path', position = 'identity') +
stat_density(geom = 'path', position = 'identity', aes(x = fitted))  +
scale_x_continuous(breaks = seq(0, 8000, by = 500)) +
labs(x = 'Average.Cost.for.two', y = '機率密度')
m4 <- lm(Average.Cost.for.two ~   Has.Online.delivery + Has.Table.booking + Aggregate.rating , data = india)
fit_m4 <- data.frame(india[, c(10, 13, 12, 17)], fitted = fitted(m4), resid = resid(m4), infl = influence(m4)$hat )
ggplot(data = fit_m4, aes(x = Average.Cost.for.two)) +
stat_density(geom = 'path', position = 'identity') +
stat_density(geom = 'path', position = 'identity', aes(x = fitted))  +
scale_x_continuous(breaks = seq(0, 8000, by = 500)) +
labs(x = 'Average.Cost.for.two', y = '機率密度')
m4 <- lm(Average.Cost.for.two ~  Votes + Has.Online.delivery + Has.Table.booking + Aggregate.rating + Price.range, data = india)
fit_m4 <- data.frame(india[, c(10,  20, 13, 12, 17, 16)], fitted = fitted(m4), resid = resid(m4), infl = influence(m4)$hat )
ggplot(data = fit_m4, aes(x = Average.Cost.for.two)) +
stat_density(geom = 'path', position = 'identity') +
stat_density(geom = 'path', position = 'identity', aes(x = fitted))  +
scale_x_continuous(breaks = seq(0, 8000, by = 500)) +
labs(x = 'Average.Cost.for.two', y = '機率密度')
m4 <- lm(Average.Cost.for.two ~ Rating.text + Votes + Has.Online.delivery + Has.Table.booking + Aggregate.rating + Price.range, data = india)
fit_m4 <- data.frame(india[, c(10, 19, 20, 13, 12, 17, 16)], fitted = fitted(m4), resid = resid(m4), infl = influence(m4)$hat )
ggplot(data = fit_m4, aes(x = Average.Cost.for.two)) +
stat_density(geom = 'path', position = 'identity') +
stat_density(geom = 'path', position = 'identity', aes(x = fitted))  +
scale_x_continuous(breaks = seq(0, 8000, by = 500)) +
labs(x = 'Average.Cost.for.two', y = '機率密度')
m4 <- lm(Average.Cost.for.two ~ Votes + Has.Online.delivery + Has.Table.booking + Aggregate.rating + Price.range, data = india)
fit_m4 <- data.frame(india[, c(10, 20, 13, 12, 17, 16)], fitted = fitted(m4), resid = resid(m4), infl = influence(m4)$hat )
ggplot(data = fit_m4, aes(x = Average.Cost.for.two)) +
stat_density(geom = 'path', position = 'identity') +
stat_density(geom = 'path', position = 'identity', aes(x = fitted))  +
scale_x_continuous(breaks = seq(0, 8000, by = 500)) +
labs(x = 'Average.Cost.for.two', y = '機率密度')
m4 <- lm(Average.Cost.for.two ~ Rating.text + Votes + Has.Online.delivery + Has.Table.booking + Aggregate.rating + Price.range, data = india)
fit_m4 <- data.frame(india[, c(10, 19, 20, 13, 12, 17, 16)], fitted = fitted(m4), resid = resid(m4), infl = influence(m4)$hat )
ggplot(data = fit_m4, aes(x = Average.Cost.for.two)) +
stat_density(geom = 'path', position = 'identity') +
stat_density(geom = 'path', position = 'identity', aes(x = fitted))  +
scale_x_continuous(breaks = seq(0, 8000, by = 500)) +
labs(x = 'Average.Cost.for.two', y = '機率密度')
m4 <- lm(Average.Cost.for.two ~ Votes + Has.Online.delivery + Has.Table.booking + Price.range, data = india)
fit_m4 <- data.frame(india[, c(10, 20, 13, 12, 16)], fitted = fitted(m4), resid = resid(m4), infl = influence(m4)$hat )
ggplot(data = fit_m4, aes(x = Average.Cost.for.two)) +
stat_density(geom = 'path', position = 'identity') +
stat_density(geom = 'path', position = 'identity', aes(x = fitted))  +
scale_x_continuous(breaks = seq(0, 8000, by = 500)) +
labs(x = 'Average.Cost.for.two', y = '機率密度')
m4 <- lm(Average.Cost.for.two ~ Rating.text + Votes + Has.Online.delivery + Has.Table.booking + Aggregate.rating , data = india)
fit_m4 <- data.frame(india[, c(10, 19, 20, 13, 12, 17)], fitted = fitted(m4), resid = resid(m4), infl = influence(m4)$hat )
ggplot(data = fit_m4, aes(x = Average.Cost.for.two)) +
stat_density(geom = 'path', position = 'identity') +
stat_density(geom = 'path', position = 'identity', aes(x = fitted))  +
scale_x_continuous(breaks = seq(0, 8000, by = 500)) +
labs(x = 'Average.Cost.for.two', y = '機率密度')
m4 <- lm(Average.Cost.for.two ~ Votes + Has.Online.delivery + Has.Table.booking + Aggregate.rating , data = india)
fit_m4 <- data.frame(india[, c(10, 20, 13, 12, 17)], fitted = fitted(m4), resid = resid(m4), infl = influence(m4)$hat )
ggplot(data = fit_m4, aes(x = Average.Cost.for.two)) +
stat_density(geom = 'path', position = 'identity') +
stat_density(geom = 'path', position = 'identity', aes(x = fitted))  +
scale_x_continuous(breaks = seq(0, 8000, by = 500)) +
labs(x = 'Average.Cost.for.two', y = '機率密度')
m4 <- lm(Average.Cost.for.two ~ Rating.text +Votes + Has.Online.delivery + Has.Table.booking  , data = india)
fit_m4 <- data.frame(india[, c(10, 19,20, 13, 12)], fitted = fitted(m4), resid = resid(m4), infl = influence(m4)$hat )
ggplot(data = fit_m4, aes(x = Average.Cost.for.two)) +
stat_density(geom = 'path', position = 'identity') +
stat_density(geom = 'path', position = 'identity', aes(x = fitted))  +
scale_x_continuous(breaks = seq(0, 8000, by = 500)) +
labs(x = 'Average.Cost.for.two', y = '機率密度')
m4 <- lm(Average.Cost.for.two ~ Rating.text + Votes + Has.Online.delivery + Has.Table.booking + Aggregate.rating , data = india)
fit_m4 <- data.frame(india[, c(10, 19, 20, 13, 12, 17)], fitted = fitted(m4), resid = resid(m4), infl = influence(m4)$hat )
ggplot(data = fit_m4, aes(x = Average.Cost.for.two)) +
stat_density(geom = 'path', position = 'identity') +
stat_density(geom = 'path', position = 'identity', aes(x = fitted))  +
scale_x_continuous(breaks = seq(0, 8000, by = 500)) +
labs(x = 'Average.Cost.for.two', y = '機率密度')
ggplot(data = fit_m4, aes(x = scale(resid)), group = Rating.text ) +
stat_density(geom = 'path', position = 'identity', aes(linetype = Rating.text)) +
scale_linetype_manual(values = 5:1) +
guides(linetype = guide_legend(reverse = TRUE)) +
labs(x = '標準化殘差', y = '機率密度') +
theme(legend.position = c(.15, .8))
ggplot(data = fit_m4, aes(x = scale(resid)) ) +
stat_density(geom = 'path', position = 'identity') +
scale_linetype_manual(values = 5:1) +
guides(linetype = guide_legend(reverse = TRUE)) +
labs(x = '標準化殘差', y = '機率密度') +
theme(legend.position = c(.15, .8))
ggplot(data = fit_m2, aes(x = scale(resid)), group = Rating.text ) +
stat_density(geom = 'path', position = 'identity', aes(linetype = Rating.text)) +
scale_linetype_manual(values = 5:1) +
guides(linetype = guide_legend(reverse = TRUE)) +
labs(x = '標準化殘差', y = '機率密度') +
theme(legend.position = c(.15, .8))
ggplot(data = fit_m2, aes(x = scale(resid)), group = Rating.text ) +
stat_density(geom = 'path', position = 'identity', aes(linetype = Rating.text)) +
scale_linetype_manual(values = 6:1) +
guides(linetype = guide_legend(reverse = TRUE)) +
labs(x = '標準化殘差', y = '機率密度') +
theme(legend.position = c(.15, .8))
ggplot(data = fit_m2, aes(x = scale(resid)), group = Rating.text ) +
stat_density(geom = 'path', position = 'identity', aes(linetype = Rating.text)) +
scale_linetype_manual(values = 6:1) +
guides(linetype = guide_legend(reverse = TRUE)) +
labs(x = '標準化殘差', y = '機率密度')
theme_set(old)
ggplot(data = fit_m2, aes(x = scale(resid)), group = Rating.text ) +
stat_density(geom = 'path', position = 'identity', aes(linetype = Rating.text)) +
scale_linetype_manual(values = 6:1) +
guides(linetype = guide_legend(reverse = TRUE)) +
labs(x = '標準化殘差', y = '機率密度')
require(lattice)
qqmath(~ scale(resid) | Rating.text, data = fit_m2, type = c('p', 'g', 'r'),
xlab = '常態位數', ylab = '標準化殘差', layout = c(2, 3),
pch = '.', cex = 2)
require(MASS)
ggplot(data = fit_m2, aes(x = fitted, y = scale(resid), group = Rating.text )) +
geom_point(pch = 20, size = 1) +
stat_smooth(method = 'rlm', se = F) +
facet_grid(Rating.text ~ .) +
labs(x = '數學預測值', y = '標準化殘差')
ggplot(data = fit_m2, aes(x = infl, y = scale(resid), group = Rating.text)) +
geom_text(aes(label = rownames(fit_m2)), cex = 2) +
geom_hline(yintercept = 0, linetype = 'dotted') +
facet_grid(Rating.text ~ .) +
labs(x = '影響值', y = '標準化殘差')
source('C:/Users/User/Desktop/Data-Science-Programming/week4/EDA2.R', encoding = 'UTF-8')
