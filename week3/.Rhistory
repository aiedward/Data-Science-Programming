plot(kmeansData, col = cl$cluster)
text(kmeansData, labels = rownames(kmeansData), col = cl$cluster)
points(cl$centers, col = 1:3, pch = 8, cex = 2)
text(kmeansData,font = 3 labels = rownames(kmeansData), col = cl$cluster)
cl <- kmeans(kmeansData, 3)
plot(kmeansData, col = cl$cluster)
text(kmeansData,font = 3, labels = rownames(kmeansData), col = cl$cluster)
text(kmeansData, font = 3,pos = 1, labels = rownames(kmeansData), col = cl$cluster)
cl <- kmeans(kmeansData, 3)
plot(kmeansData, col = cl$cluster)
text(kmeansData, font = 3,pos = 1, labels = rownames(kmeansData), col = cl$cluster)
text(kmeansData, font = 3,hjust=1, labels = rownames(kmeansData), col = cl$cluster)
cl <- kmeans(kmeansData, 3)
plot(kmeansData, col = cl$cluster)
text(kmeansData, font = 3,hjust=1, labels = rownames(kmeansData), col = cl$cluster)
text(kmeansData, font = 3,hjust=0.5, labels = rownames(kmeansData), col = cl$cluster)
cl <- kmeans(kmeansData, 3)
plot(kmeansData, col = cl$cluster)
text(kmeansData, font = 3,offset = 0.4, labels = rownames(kmeansData), col = cl$cluster)
points(cl$centers, col = 1:3, pch = 8, cex = 2)
cl <- kmeans(kmeansData, 3)
plot(kmeansData, col = cl$cluster)
text(kmeansData, font = 3,offset = 1, labels = rownames(kmeansData), col = cl$cluster)
points(cl$centers, col = 1:3, pch = 8, cex = 2)
cl <- kmeans(kmeansData, 3)
plot(kmeansData, col = cl$cluster)
text(kmeansData, font = 3,offset = 3, labels = rownames(kmeansData), col = cl$cluster)
points(cl$centers, col = 1:3, pch = 8, cex = 2)
cl <- kmeans(kmeansData, 3)
plot(kmeansData, col = cl$cluster)
text(kmeansData, font = 3,vfont = 3, labels = rownames(kmeansData), col = cl$cluster)
cl <- kmeans(kmeansData, 3)
plot(kmeansData, col = cl$cluster)
text(kmeansData, font = 3,adj = 2, labels = rownames(kmeansData), col = cl$cluster)
cl <- kmeans(kmeansData, 3)
plot(kmeansData, col = cl$cluster)
text(kmeansData, font = 3,adj = 0.5, labels = rownames(kmeansData), col = cl$cluster)
cl <- kmeans(kmeansData, 3)
plot(kmeansData, col = cl$cluster)
text(kmeansData, font = 3, labels = rownames(kmeansData), col = cl$cluster)
cl <- kmeans(kmeansData, 3)
plot(kmeansData, col = cl$cluster)
text(kmeansData, font = 3, labels = rownames(kmeansData), col = cl$cluster)
points(cl$centers, col = 1:3, pch = 8, cex = 2)
colnames(x) <- c("x", "y")
colnames(x) <- c("x", "y")
(cl <- kmeans(x, 2))
plot(x, col = cl$cluster)
points(cl$centers, col = 1:2, pch = 8, cex = 2)
ind.coord2 <- docs.ind$coord[, 1:2]
wss <- c()
for (i in 1:2) { wss[i] <- kmeans(ind.coord2, i)$tot.withinss }
plot(wss, type = "b")
rownames(ind.coord2) <- c('白居易','杜甫','李白','孟浩然','王維')
km <- kmeans(ind.coord2, 3)
plot(ind.coord2, col = km$cluster)
points(km$centers, col = 1:3, pch = 8, cex = 2)
km <- kmeans(ind.coord2, 3)
plot(ind.coord2, col = km$cluster)
text(ind.coord2, font = 3, labels = rownames(ind.coord2), col = km$cluster)
points(km$centers, col = 1:3, pch = 8, cex = 2)
rownames(ind.coord2) <- c('白居易','杜甫','李白','孟浩然','王維')
km <- kmeans(ind.coord2, 2)
plot(ind.coord2, col = km$cluster)
text(ind.coord2, font = 3, labels = rownames(ind.coord2), col = km$cluster)
km <- kmeans(ind.coord2, 2)
plot(ind.coord2, col = km$cluster)
text(ind.coord2, font = 3, labels = rownames(ind.coord2), col = km$cluster)
points(km$centers, col = 1:3, pch = 8, cex = 2)
rownames(ind.coord2) <- c('白居易','杜甫','李白','孟浩然','王維')
km <- kmeans(ind.coord2, 2)
plot(ind.coord2, col = km$cluster)
text(ind.coord2, font = 3, labels = rownames(ind.coord2), col = km$cluster)
rownames(ind.coord2) <- c('白居易','杜甫','李白','孟浩然','王維')
km <- kmeans(ind.coord2, 2)
plot(ind.coord2, col = km$cluster)
text(ind.coord2, font = 3, labels = rownames(ind.coord2), col = km$cluster)
# Kmeans
kmeansData = pcat$x[,1:2]
rownames(kmeansData) <- c('白居易','杜甫','李白','孟浩然','王維')
cl <- kmeans(kmeansData, 3)
plot(kmeansData, col = cl$cluster)
text(kmeansData, font = 3, labels = rownames(kmeansData), col = cl$cluster)
points(cl$centers, col = 1:3, pch = 8, cex = 2)
cl <- kmeans(kmeansData, 3)
plot(kmeansData, col = cl$cluster)
text(kmeansData, font = 2, labels = rownames(kmeansData), col = cl$cluster)
points(cl$centers, col = 1:3, pch = 8, cex = 2)
cl <- kmeans(kmeansData, 3)
plot(kmeansData, col = cl$cluster)
text(kmeansData, font = 1, labels = rownames(kmeansData), col = cl$cluster)
points(cl$centers, col = 1:3, pch = 8, cex = 2)
cl <- kmeans(kmeansData, 3)
plot(kmeansData, col = cl$cluster)
text(kmeansData, font = 4, labels = rownames(kmeansData), col = cl$cluster)
points(cl$centers, col = 1:3, pch = 8, cex = 2)
cl <- kmeans(kmeansData, 3)
plot(kmeansData, col = cl$cluster)
text(kmeansData, font = 1, labels = rownames(kmeansData), col = cl$cluster)
points(cl$centers, col = 1:3, pch = 8, cex = 2)
cl <- kmeans(kmeansData, 3)
plot(kmeansData, col = cl$cluster)
text(kmeansData, labels = rownames(kmeansData), col = cl$cluster)
points(cl$centers, col = 1:3, pch = 8, cex = 2)
cl <- kmeans(kmeansData, 3)
plot(kmeansData, col = cl$cluster)
text(kmeansData, labels = rownames(kmeansData), col = cl$cluster)
points(cl$centers, col = 1:3, pch = 8, cex = 2)
cl <- kmeans(kmeansData, 3)
plot(kmeansData, col = cl$cluster)
text(kmeansData, labels = rownames(kmeansData), col = cl$cluster)
points(cl$centers, col = 1:3, pch = 8, cex = 2)
source('C:/Users/User/Desktop/Data-Science-Programming/week3/TF-IDF_poem.R', encoding = 'UTF-8', echo=TRUE)
query.tfidf <- function(q){
q.tfidf <- doc.tfidf[doc.tfidf$d==q, ]
return (q.tfidf)
}
query=c("美酒", "夕陽", "故人", "老翁", "西風", "琵琶")
result = query.tfidf(query[1])
for ( id in c(2:length(query)) )
{
q.tfidf = query.tfidf(query[id])
result = rbind(result, q.tfidf)
}
result
cos <- function(x, y){
return (x %*% y / sqrt(x %*% x * y %*% y))[1, 1]
}
# compare with first doc
docs.cos.sim <- apply(doc.tfidf[,2:6], 2, cos, y = doc.tfidf[,4])
docs.cos.sim
# TF-IDF 文章取得的重要關鍵字
TopWords = data.frame()
for( id in c(1:n) )
{
dayMax = order(doc.tfidf[,id+1], decreasing = TRUE)
showResult = t(as.data.frame(doc.tfidf[dayMax[1:10],1]))
TopWords = rbind(TopWords, showResult)
}
rownames(TopWords) = colnames(doc.tfidf)[2:(n+1)]
TopWords = droplevels(TopWords)
kable(TopWords)
# PCA
t = t(doc.tfidf)
# names(t) = t[1,]
colnames(t) <- t[1,]
t = t[-1,]
# t = apply(t[,1:10], 2, as.numeric)
t = apply(t, 2, as.numeric)
pcat = prcomp(t)
g <- ggbiplot(pcat, obs.scale = 1, var.scale = 1, ellipse = TRUE, circle = TRUE)
g
fviz_eig(pcat)
fviz_pca_ind(pcat)
colNames
fviz_pca_ind(pcat,text=c('白居易','杜甫','李白','孟浩然','王維'))
text=(pcat,c('白居易','杜甫','李白','孟浩然','王維'))
text=(pcat, c('白居易','杜甫','李白','孟浩然','王維'))
text(pcat, c('白居易','杜甫','李白','孟浩然','王維'))
text(pcat$rotation, c('白居易','杜甫','李白','孟浩然','王維'))
fviz_pca_ind(pcat)
text(pcat$rotation, c('白居易','杜甫','李白','孟浩然','王維'))
fviz_pca_ind(pcat)+text(pcat$rotation, c('白居易','杜甫','李白','孟浩然','王維'))
fviz_pca_ind(pcat, geom.ind = c("point"), col.ind = "cos2")
fviz_eig(pcat)
fviz_pca(pcat)
fviz_pca_var(pcat, col.var = "contrib")
fviz_pca_ind(pcat, geom.ind = c("point"), col.ind = "cos2")
fviz_pca_var(pcat, col.var = "contrib")
fviz_pca_ind(pcat, geom.ind = c("point","text"), col.ind = "cos2")
fviz_pca_ind(pcat, geom.ind = c("point","text","arrow"), col.ind = "cos2")
fviz_pca_ind(pcat, geom= c("point","text","arrow"), col.ind = "cos2")
pcat
View(pcat)
names(pcat)
library(tm)
library(tmcn)
library(Matrix)
library(wordcloud)
library(bitops)
library(httr)
library(RCurl)
library(XML)
library(NLP)
library(jiebaRD)
library(jiebaR)
library(devtools)
install_github("ggbiplot", "vqv")
library(scales)
library(grid)
library(ggbiplot)
library(factoextra)
tf <- apply(as.matrix(TDM[,2:(n+1)]), 2, sum) #直向相加計算總數
library(Matrix)
idfCal <- function(word_doc)
{
log2( n / nnzero(word_doc) )
}
idf <- apply(as.matrix(TDM[,2:(n+1)]), 1, idfCal)
doc.tfidf <- TDM
tempY = matrix(rep(c(as.matrix(tf)), each = length(idf)), nrow = length(idf))
tempX = matrix(rep(c(as.matrix(idf)), each = length(tf)), ncol = length(tf), byrow = TRUE)
doc.tfidf[,2:(n+1)] <- (doc.tfidf[,2:(n+1)] / tempY) * tempX
#刪除不重要(td-idf=0)的字
stopLine = rowSums(doc.tfidf[,2:(n+1)])
delID = which(stopLine == 0)
kable(head(doc.tfidf[delID,1]))
kable(tail(doc.tfidf[delID,1]))
#final result
TDM = TDM[-delID,]
doc.tfidf = doc.tfidf[-delID,]
f <- sort(rowSums(doc.tfidf), decreasing = T)
docs.df <- data.frame(
word = names(f),
freq = f
)
wordcloud(docs.df$word, docs.df$freq, scale=c(5,0.1), colors=brewer.pal(8, "Dark2"))
library(wordcloud)
f <- sort(rowSums(doc.tfidf), decreasing = T)
docs.df <- data.frame(
word = names(f),
freq = f
)
wordcloud(docs.df$word, docs.df$freq, scale=c(5,0.1), colors=brewer.pal(8, "Dark2"))
doc.tfidf
View(doc.tfidf)
doc.tfidf
tf <- apply(as.matrix(TDM[,2:(n+1)]), 2, sum) #直向相加計算總數
idfCal <- function(word_doc)
{
log2( n / nnzero(word_doc) )
}
idf <- apply(as.matrix(TDM[,2:(n+1)]), 1, idfCal)
doc.tfidf <- TDM
tempY = matrix(rep(c(as.matrix(tf)), each = length(idf)), nrow = length(idf))
tempX = matrix(rep(c(as.matrix(idf)), each = length(tf)), ncol = length(tf), byrow = TRUE)
doc.tfidf[,2:(n+1)] <- (doc.tfidf[,2:(n+1)] / tempY) * tempX
#刪除不重要(td-idf=0)的字
stopLine = rowSums(doc.tfidf[,2:(n+1)])
d.corpus <- Corpus( DirSource("./data/poem", encoding = "UTF-8"))
d.corpus <- tm_map(d.corpus, removePunctuation) #移除標點符號
d.corpus <- tm_map(d.corpus, removeNumbers) #移除數字
#d.corpus <- tm_map(d.corpus,stripWhitespace) #消除空格
#d.corpus <- tm_map(d.corpus, function(word) { # 移除大小寫
#  gsub("[A-Za-z0-9]", "", word)
#})
mixseg = worker()
#斷詞
jieba_tokenizer = function(d)
{
unlist( segment(d[[1]], mixseg) )
}
seg = lapply(d.corpus, jieba_tokenizer)
#計數
count_token = function(d)
{
as.data.frame(table(d))
}
tokens = lapply(seg, count_token)
# TDM
n = length(seg)
TDM = tokens[[1]]
colNames <- c('白居易','杜甫','李白','孟浩然','王維')
for( id in c(2:n) )
{
TDM = merge(TDM, tokens[[id]], by="d", all = TRUE)
names(TDM) = c('d', colNames[1:id])
}
TDM[is.na(TDM)] <- 0 #將NA填0
library(knitr)
kable(head(TDM))
kable(tail(TDM))
tf <- apply(as.matrix(TDM[,2:(n+1)]), 2, sum) #直向相加計算總數
idfCal <- function(word_doc)
{
log2( n / nnzero(word_doc) )
}
idf <- apply(as.matrix(TDM[,2:(n+1)]), 1, idfCal)
doc.tfidf <- TDM
tempY = matrix(rep(c(as.matrix(tf)), each = length(idf)), nrow = length(idf))
tempX = matrix(rep(c(as.matrix(idf)), each = length(tf)), ncol = length(tf), byrow = TRUE)
doc.tfidf[,2:(n+1)] <- (doc.tfidf[,2:(n+1)] / tempY) * tempX
#刪除不重要(td-idf=0)的字
stopLine = rowSums(doc.tfidf[,2:(n+1)])
delID = which(stopLine == 0)
kable(head(doc.tfidf[delID,1]))
kable(tail(doc.tfidf[delID,1]))
# final result
TDM = TDM[-delID,]
doc.tfidf = doc.tfidf[-delID,]
View(doc.tfidf)
TopWords = data.frame()
for( id in c(1:n) )
{
dayMax = order(doc.tfidf[,id+1], decreasing = TRUE)
showResult = t(as.data.frame(doc.tfidf[dayMax[1:10],1])) #取前10
TopWords = rbind(TopWords, showResult)
}
rownames(TopWords) = colnames(doc.tfidf)[2:(n+1)]
TopWords = droplevels(TopWords)
kable(TopWords)
query.tfidf <- function(q){
q.tfidf <- doc.tfidf[doc.tfidf$d==q, ]
return (q.tfidf)
}
query=c("美酒", "夕陽", "故人", "老翁", "西風", "琵琶")
result = query.tfidf(query[1])
for ( id in c(2:length(query)) )
{
q.tfidf = query.tfidf(query[id])
result = rbind(result, q.tfidf)
}
result
cos <- function(x, y){
return (x %*% y / sqrt(x %*% x * y %*% y))[1, 1]
}
# compare with 李白
docs.cos.sim <- apply(doc.tfidf[,2:6], 2, cos, y = doc.tfidf[,4])
docs.cos.sim
library(wordcloud)
f <- sort(rowSums(doc.tfidf), decreasing = T)
library(wordcloud)
f <- sort(rowSums(doc.tfidf[2:]), decreasing = T)
library(wordcloud)
f <- sort(rowSums(doc.tfidf,2:]), decreasing = T)
library(wordcloud)
f <- sort(rowSums(doc.tfidf[,2:]), decreasing = T)
library(wordcloud)
f <- sort(rowSums(doc.tfidf[,2:6]), decreasing = T)
docs.df <- data.frame(
word = names(f),
freq = f
)
wordcloud(docs.df$word, docs.df$freq, scale=c(5,0.1), colors=brewer.pal(8, "Dark2"))
library(wordcloud)
f <- sort(rowSums(doc.tfidf[,2:6]), decreasing = T)
docs.df <- data.frame(
word = names(f),
freq = f
)
wordcloud(docs.df$word, docs.df$freq, scale=c(5,0.1),max.words=45, colors=brewer.pal(8, "Dark2"))
View(f)
rownames(doc.tfidf) = doc.tfidf$d
library(wordcloud)
rownames(doc.tfidf) = doc.tfidf$d
f <- sort(rowSums(doc.tfidf[,2:6]), decreasing = T)
docs.df <- data.frame(
word = names(f),
freq = f
)
wordcloud(docs.df$word, docs.df$freq, scale=c(5,0.1),max.words=45, colors=brewer.pal(8, "Dark2"))
library(wordcloud)
rownames(doc.tfidf) = doc.tfidf$d
f <- sort(rowSums(doc.tfidf[,2:6]), decreasing = T)
docs.df <- data.frame(
word = names(f),
freq = f
)
wordcloud(docs.df$word, docs.df$freq, scale=c(5,0.1),max.words=45, colors=brewer.pal(8, "Dark2"))
wordcloud(docs.df$word, docs.df$freq, scale=c(5,0.1),max.words=50, colors=brewer.pal(8, "Dark2"))
library(wordcloud)
rownames(doc.tfidf) = doc.tfidf$d
f <- sort(rowSums(doc.tfidf[,2:6]), decreasing = T)
docs.df <- data.frame(
word = names(f),
freq = f
)
wordcloud(docs.df$word, docs.df$freq, scale=c(5,0.1),max.words=50)
library(wordcloud)
rownames(doc.tfidf) = doc.tfidf$d
f <- sort(rowSums(doc.tfidf[,2:6]), decreasing = T)
docs.df <- data.frame(
word = names(f),
freq = f
)
wordcloud(docs.df$word, docs.df$freq, scale=c(5,0.1),max.words=50,
random.order=TRUE, random.color=FALSE,
rot.per=.1, colors=brewer.pal(8, "Dark2"),
ordered.colors=FALSE,use.r.layout=FALSE,
fixed.asp=TRUE)
library(wordcloud)
rownames(doc.tfidf) = doc.tfidf$d
f <- sort(rowSums(doc.tfidf[,2:6]), decreasing = T)
docs.df <- data.frame(
word = names(f),
freq = f
)
wordcloud(docs.df$word, docs.df$freq, scale=c(5,0.1),max.words=50,
random.order=TRUE, random.color=FALSE,
rot.per=.1, colors=brewer.pal(8, "Dark2"),
ordered.colors=FALSE,use.r.layout=FALSE,
fixed.asp=TRUE)
```{r, warning=FALSE}
library(wordcloud)
rownames(doc.tfidf) = doc.tfidf$d
f <- sort(rowSums(doc.tfidf[,2:6]), decreasing = T)
docs.df <- data.frame(
word = names(f),
freq = f
)
wordcloud(docs.df$word, docs.df$freq, scale=c(5,0.1),max.words=50,
random.order=TRUE, random.color=FALSE,
rot.per=.1, colors=brewer.pal(8, "Dark2"),
ordered.colors=FALSE,use.r.layout=FALSE,
fixed.asp=TRUE)
library(wordcloud)
rownames(doc.tfidf) = doc.tfidf$d
f <- sort(rowSums(doc.tfidf[,2:6]), decreasing = T)
docs.df <- data.frame(
word = names(f),
freq = f
)
wordcloud(docs.df$word, docs.df$freq, scale=c(5,0.1),max.words=100,
random.order=TRUE, random.color=FALSE,
rot.per=.1, colors=brewer.pal(8, "Dark2"),
ordered.colors=FALSE,use.r.layout=FALSE,
fixed.asp=TRUE)
View(docs.df)
t = t(doc.tfidf)
View(t[,1:10])
class(t[1,1:10])
class(t[2,1:10])
class(t[2,1])
class(t[4,4])
colnames(doc.tfidf)
View(doc.tfidf)
# names(t) = t[1,]
#colnames(t) <- t[1,]
t = t[-1,]
class(t[4,4])
t = apply(t, 2, as.numeric)
class(t[4,4])
pcat = prcomp(t)
g <- ggbiplot(pcat, obs.scale = 1, var.scale = 1, ellipse = TRUE, circle = TRUE)
g
t = t(doc.tfidf) #轉置
t = t[-1,] #刪除第一列
t = apply(t, 2, as.numeric) #由'character'轉成'numeric'
#PCA
pcat = prcomp(t)
g <- ggbiplot(pcat, obs.scale = 1, var.scale = 1, ellipse = TRUE, circle = TRUE)
# g
fviz_eig(pcat)
fviz_pca_ind(pcat, geom= c("point","text","arrow"), col.ind = "cos2")
fviz_pca_var(pcat, col.var = "contrib")
docs.ind <- get_pca_ind(pcat)
ind.coord2 <- docs.ind$coord[, 1:2]
wss <- c()
for (i in 1:10) { wss[i] <- kmeans(ind.coord2, i)$tot.withinss }
docs.ind <- get_pca_ind(pcat)
ind.coord2 <- docs.ind$coord[, 1:2]
wss <- c()
for (i in 1:4) { wss[i] <- kmeans(ind.coord2, i)$tot.withinss }
plot(wss, type = "b")
docs.ind <- get_pca_ind(pcat)
ind.coord2 <- docs.ind$coord[, 1:2]
wss <- c()
for (i in 1:3) { wss[i] <- kmeans(ind.coord2, i)$tot.withinss }
plot(wss, type = "b")
docs.ind <- get_pca_ind(pcat)
ind.coord2 <- docs.ind$coord[, 1:2]
wss <- c()
for (i in 1:2) { wss[i] <- kmeans(ind.coord2, i)$tot.withinss }
plot(wss, type = "b")
docs.ind <- get_pca_ind(pcat)
ind.coord2 <- docs.ind$coord[, 1:2]
wss <- c()
for (i in 1:4) { wss[i] <- kmeans(ind.coord2, i)$tot.withinss }
plot(wss, type = "b")
docs.ind <- get_pca_ind(pcat)
ind.coord2 <- docs.ind$coord[, 1:2]
wss <- c()
for (i in 1:4) { wss[i] <- kmeans(ind.coord2, i)$tot.withinss }
plot(wss, type = "b")
ind.coord2 <- docs.ind$coord[, 1:3]
docs.ind <- get_pca_ind(pcat)
ind.coord2 <- docs.ind$coord[, 1:3]
wss <- c()
for (i in 1:4) { wss[i] <- kmeans(ind.coord2, i)$tot.withinss }
plot(wss, type = "b")
kmeansData = pcat$x[,1:3]
kmeansData = pcat$x[,1:3]
rownames(kmeansData) <- c('白居易','杜甫','李白','孟浩然','王維')
cl <- kmeans(kmeansData, 3)
plot(kmeansData, col = cl$cluster)
text(kmeansData, labels = rownames(kmeansData), col = cl$cluster)
points(cl$centers, col = 1:3, pch = 8, cex = 1) # pch 點樣式, cex 點大小
pcat$x
kmeansData = pcat$x[,1:2]
rownames(kmeansData) <- c('白居易','杜甫','李白','孟浩然','王維')
cl <- kmeans(kmeansData, 3)
plot(kmeansData, col = cl$cluster)
text(kmeansData, labels = rownames(kmeansData), col = cl$cluster)
points(cl$centers, col = 1:3, pch = 8, cex = 1) # pch 點樣式, cex 點大小
cl <- kmeans(kmeansData, 4)
plot(kmeansData, col = cl$cluster)
text(kmeansData, labels = rownames(kmeansData), col = cl$cluster)
points(cl$centers, col = 1:2, pch = 8, cex = 1) # pch 點樣式, cex 點大小
points(cl$centers, col = 1:4, pch = 8, cex = 1) # pch 點樣式, cex 點大小
cl <- kmeans(kmeansData, 4)
plot(kmeansData, col = cl$cluster)
text(kmeansData, labels = rownames(kmeansData), col = cl$cluster)
points(cl$centers, col = 1:4, pch = 8, cex = 1) # pch 點樣式, cex 點大小
cl <- kmeans(kmeansData, 4)
plot(kmeansData, col = cl$cluster)
text(kmeansData, labels = rownames(kmeansData), col = cl$cluster)
points(cl$centers, col = 1:4, pch = 8, cex = 1) # pch 點樣式, cex 點大小
docs.ind <- get_pca_ind(pcat)
ind.coord2 <- docs.ind$coord[, 1:2]
wss <- c()
for (i in 1:4) { wss[i] <- kmeans(ind.coord2, i)$tot.withinss }
plot(wss, type = "b")
